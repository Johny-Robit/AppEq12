"""
Django settings for eventify project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-977twumu=p=jpaav(ie1*)&x04b9k3y=+^1f5)xg&ce7i5c(n^'

# TODO SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# TODO inscrire notre domaine une fois le déploiement sur Heroku
ALLOWED_HOSTS = ["*"] if DEBUG else ["yourdomain.com"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'events'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
]

ROOT_URLCONF = 'eventify.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'eventify.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}


# AUTHENTICATION & AUTORISATION
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Paramétrage des cookies de session
SESSION_ENGINE = "django.contrib.sessions.backends.db"
SESSION_COOKIE_SAMESITE = "Lax"  # Permet d'envoyer le cookie de session entre le backend et le frontend
SESSION_COOKIE_NAME = "sessionid"  # Nom du cookie de session
SESSION_COOKIE_AGE = 1209600  # 2 semaines de durée de vie
SESSION_COOKIE_SECURE = not DEBUG  # Mettre à True en production avec HTTPS
SESSION_COOKIE_HTTPONLY = True  # Empêche JavaScript d'accéder au cookie (meilleure sécurité)
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # La session persiste même après la fermeture du navigateur
# Paramétrage CSRF pour les cookies ?
CSRF_TRUSTED_ORIGINS = ["http://127.0.0.1:8000", "http://localhost:5173"]  # Ajoute l'URL du frontend Vue
CSRF_COOKIE_NAME = "csrftoken"  # Nom du cookie CSRF
CSRF_COOKIE_HTTPONLY = False  # Permet à Vue.js de lire le cookie CSRF
CSRF_COOKIE_SECURE = False  # TODO Doit être à True en production avec HTTPS


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Pour pytest-django
pytest_plugins = ["django.contrib.auth"]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        # DEBUG :
        # TODO For production, use RotatingFileHandler to limit file size
        # from logging.handlers import RotatingFileHandler
        # 'level': 'ERROR',
        # 'class': 'logging.handlers.RotatingFileHandler',
        # 'filename': os.path.join(BASE_DIR, 'authentication.log'),
        # 'maxBytes': 1024 * 1024 * 5,  # 5 MB
        # 'backupCount': 3,  # Keep 3 backups
        # 'formatter': 'verbose',

        'eventify_file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs', 'eventify.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'eventify': {
            'handlers': ['eventify_file'],
            # DEBUG set level to 'ERROR' in production
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}